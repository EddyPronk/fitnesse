|script|
|start|login dialog driver|Bob|xyzzy|
|login with username|Bob|and password|xyzzy|
|check|login message|Bob logged in.|
|reject|login with username|Bob|and password|bad password|
|check|login message|Bob not logged in.|
|ensure|login with username|Bob|and password|xyzzy|
|note|this is a comment|
|show|number of login attempts|

The fixture for this table is:
{{{public class LoginDialogDriver {
  private String userName;
  private String password;
  private String message;
  private int loginAttempts;

  public LoginDialogDriver(String userName, String password) {
    this.userName = userName;
    this.password = password;
  }

  public boolean loginWithUsernameAndPassword(String userName, String password) {
    loginAttempts++;
    boolean result = this.userName.equals(userName) && this.password.equals(password);
    if (result)
      message = String.format("%s logged in.", this.userName);
    else
      message = String.format("%s not logged in.", this.userName);
    return result;
  }

  public String loginMessage() {
    return message;  
  }

  public int numberOfLoginAttempts() {
    return loginAttempts;
  }
} }}}

This should be pretty clear.  Each row is a single instruction in the script.  
 * The first row is simply the word "Script".

 * The second row is usually the word ''start'' and identifies the name and constructor arguments of the fixture that will be used by the rest of the table.  If you don't have a ''start'', then the previous script table's fixture on this test page will be used. 

 * Most instructions involve some kind of function call.  The name of the function is assembled from tokens in ''every other'' cell.  The arguments of the function are the intervening cells.  So 

